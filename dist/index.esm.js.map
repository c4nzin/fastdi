{"version":3,"file":"index.esm.js","sources":["../node_modules/.pnpm/reflect-metadata@0.2.2/node_modules/reflect-metadata/Reflect.js"],"sourcesContent":["/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n"],"names":["Reflect","root","globalThis","global","self","this","Function","_","functionThis","eval","indirectEvalThis","exporter","makeExporter","target","previous","key","value","Object","defineProperty","configurable","writable","hasOwn","prototype","hasOwnProperty","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","map","call","get","undefined","functionPrototype","getPrototypeOf","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","keys","values","selector","_index","_keys","_values","_selector","next","index","length","result","done","throw","error","return","_cacheKey","_cacheIndex","enumerable","_find","set","delete","size","i","SameValueZero","clear","getKey","getValue","getEntry","insert","push","CreateMapPolyfill","_Set","Set","_map","add","_WeakMap","WeakMap","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","data","Uint8Array","array","crypto","getRandomValues","msCrypto","GenRandomBytes","offset","byte","toString","toLowerCase","CreateWeakMapPolyfill","registrySymbol","for","metadataRegistry","IsUndefined","IsObject","isExtensible","fallback","first","second","rest","reflect","defineMetadata","hasOwnMetadata","getOwnMetadata","getOwnMetadataKeys","deleteMetadata","metadataOwner","isProviderFor","O","P","metadataPropertySet","OrdinaryDefineOwnMetadata","OrdinaryHasOwnMetadata","OrdinaryGetOwnMetadata","OrdinaryOwnMetadataKeys","OrdinaryDeleteMetadata","targetProviderMap","registry","registerProvider","provider","Error","getProvider","setProvider","TypeError","hasProvider","existingProvider","providerMap","GetIterator","IteratorStep","IteratorValue","IteratorClose","getProviderNoCache","CreateMetadataRegistry","GetOrCreateMetadataRegistry","metadataProvider","metadata","targetMetadata","MetadataKey","MetadataValue","GetOrCreateMetadataMap","metadataMap","ToBoolean","k","nextValue","e","Create","createdTargetMetadata","CreateMetadataProvider","OrdinaryHasMetadata","parent","OrdinaryGetPrototypeOf","IsNull","GetMetadataProvider","OrdinaryGetMetadata","OrdinaryMetadataKeys","ownKeys","parentKeys","_i","ownKeys_1","_a","parentKeys_1","Type","x","argument","ToPropertyKey","input","exoticToPrim","GetMethod","valueOf","toString_1","IsCallable","OrdinaryToPrimitive","ToPrimitive","ToString","IsArray","isArray","IsConstructor","y","V","func","obj","method","iterResult","f","proto","prototypeProto","constructor","registeredProvider","__","decorators","propertyKey","attributes","decorated","decorator","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","factory"],"mappings":"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"}